{"version":3,"file":"static/js/881.d56c69f2.chunk.js","mappings":"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","sources":["api/api.js","webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acf0af182bd80fd1b8fe4238ec11e366';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const axiosUrl = `trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(axiosUrl);\n  return response.data.results;\n}\n\nexport async function findMovieById(movie_id) {\n  const axiosUrl = `movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(axiosUrl);\n  return response.data;\n}\n\nexport async function findMovieByName(movieName) {\n  const axiosUrl = `search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`;\n  const response = await axios.get(axiosUrl);\n  return response.data.results;\n}\n\nexport async function fetchCastMovieById(movie_id) {\n  const axiosUrl = `movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(axiosUrl);\n  if (response.data.cast.length === 0) {\n    return false;\n  }\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movie_id) {\n  const axiosUrl = `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(axiosUrl);\n  if (response.data.total_results === 0) {\n    return false;\n  }\n  return response.data.results;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"castContainer\":\"Cast_castContainer__NIXqj\",\"castTitle\":\"Cast_castTitle__eoJbw\",\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"castImage\":\"Cast_castImage__d8bQP\",\"castName\":\"Cast_castName__-i08u\",\"noCastMessage\":\"Cast_noCastMessage__piD4G\"};","import { fetchCastMovieById } from '../../api/api';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport nophoto from '../../Images/nophoto.jpg';\nimport s from './Cast.module.css';\n\nconst Cast = () => {\n  const { id } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    const movieCast = async () => {\n      try {\n        const response = await fetchCastMovieById(id);\n        if (Array.isArray(response)) {\n          setCast(response);\n        } else {\n          setCast([]);\n        }\n      } catch (error) {\n        console.error(error);\n      }\n    };\n\n    movieCast();\n  }, [id]);\n\n  return (\n    <>\n      {cast.length !== 0 && (\n        <div className={s.castContainer}>\n          <h2 className={s.castTitle}>Movie Cast</h2>\n          <ul className={s.castList}>\n            {cast.map(actor => (\n              <li key={actor.id} className={s.castItem}>\n                <img\n                  width=\"200px\"\n                  height=\"300px\"\n                  className={s.castImage}\n                  src={\n                    actor.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${actor.profile_path}`\n                      : `${nophoto}`\n                  }\n                  alt={actor.original_name}\n                />\n                <p className={s.castName}>{actor.name}</p>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n      {cast.length === 0 && (\n        <div className={s.noCastMessage}>\n          We haven't finalized the cast for this movie yet.\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","axiosUrl","response","_context","prev","next","concat","axios","sent","abrupt","data","results","stop","findMovieById","_x","_findMovieById","_callee2","movie_id","_context2","findMovieByName","_x2","_findMovieByName","_callee3","movieName","_context3","fetchCastMovieById","_x3","_fetchCastMovieById","_callee4","_context4","cast","length","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5","total_results","id","useParams","_useState","useState","_useState2","_slicedToArray","setCast","useEffect","movieCast","_ref","Array","isArray","t0","console","error","_jsxs","_Fragment","children","className","s","_jsx","map","actor","width","height","src","profile_path","alt","original_name","name"],"sourceRoot":""}