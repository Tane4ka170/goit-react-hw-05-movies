{"version":3,"file":"static/js/692.14c633d2.chunk.js","mappings":"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","sources":["api/api.js","components/MoviesList/MoviesList.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'acf0af182bd80fd1b8fe4238ec11e366';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function getTrendingMovies() {\n  const axiosUrl = `trending/movie/day?api_key=${API_KEY}`;\n  const response = await axios.get(axiosUrl);\n  return response.data.results;\n}\n\nexport async function findMovieById(movie_id) {\n  const axiosUrl = `movie/${movie_id}?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(axiosUrl);\n  return response.data;\n}\n\nexport async function findMovieByName(movieName) {\n  const axiosUrl = `search/movie?api_key=${API_KEY}&language=en-US&query=${movieName}&page=1&include_adult=false`;\n  const response = await axios.get(axiosUrl);\n  return response.data.results;\n}\n\nexport async function fetchCastMovieById(movie_id) {\n  const axiosUrl = `movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`;\n  const response = await axios.get(axiosUrl);\n  if (response.data.cast.length === 0) {\n    return false;\n  }\n  return response.data.cast;\n}\n\nexport async function getMovieReviews(movie_id) {\n  const axiosUrl = `movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  const response = await axios.get(axiosUrl);\n  if (response.data.total_results === 0) {\n    return false;\n  }\n  return response.data.results;\n}\n","import { useLocation } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\n\nexport default function MoviesList({ searchMovies }) {\n  const location = useLocation();\n\n  if (!searchMovies || searchMovies.length === 0) {\n    return <p>No movies found.</p>;\n  }\n\n  return (\n    <ul>\n      {searchMovies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movie/${movie.id}`} state={{ from: location }}>\n            <img\n              src={\n                movie.poster_path\n                  ? `https://image.tmdb.org/t/p/w500${movie.poster_path}`\n                  : 'https://placeholder-url.com/placeholder-image.jpg'\n              }\n              alt={movie.title}\n              height=\"446px\"\n            />\n            <p>{movie.title}</p>\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { findMovieByName } from '../../api/api';\nimport MoviesList from '../../components/MoviesList/MoviesList';\n\nexport default function Movies() {\n  const [inputChange, setInputChange] = useState('');\n  const [searchMovies, setSearchMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const productName = (searchParams.get('query') ?? '').trim();\n\n  useEffect(() => {\n    setInputChange(productName);\n\n    if (productName === '') return;\n    findMovieByName(searchParams.get('query')).then(data => {\n      setSearchMovies(data);\n    });\n  }, [productName, searchParams]);\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (inputChange.trim() !== '') {\n      setSearchParams({ query: inputChange.trim() });\n    }\n\n    e.target.reset();\n  }\n\n  return (\n    <section>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Provide a search term{' '}\n          <input\n            value={inputChange}\n            onChange={e => {\n              setInputChange(e.target.value);\n            }}\n          />\n        </label>\n        <button type=\"submit\">Search</button>\n      </form>\n      <MoviesList searchMovies={searchMovies} />\n    </section>\n  );\n}\n"],"names":["API_KEY","getTrendingMovies","_getTrendingMovies","apply","arguments","_asyncToGenerator","_regeneratorRuntime","_callee","axiosUrl","response","_context","prev","next","concat","axios","sent","abrupt","data","results","stop","findMovieById","_x","_findMovieById","_callee2","movie_id","_context2","findMovieByName","_x2","_findMovieByName","_callee3","movieName","_context3","fetchCastMovieById","_x3","_fetchCastMovieById","_callee4","_context4","cast","length","getMovieReviews","_x4","_getMovieReviews","_callee5","_context5","total_results","MoviesList","_ref","searchMovies","location","useLocation","_jsx","children","map","movie","_jsxs","Link","to","id","state","from","src","poster_path","alt","title","height","Movies","_searchParams$get","_useState","useState","_useState2","_slicedToArray","inputChange","setInputChange","_useState3","_useState4","setSearchMovies","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","productName","get","trim","useEffect","then","onSubmit","e","preventDefault","query","target","reset","value","onChange","type"],"sourceRoot":""}